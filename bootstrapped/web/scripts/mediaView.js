// Generated by CoffeeScript 1.6.2
(function() {
  define(['jquery', 'backbone-min', 'catalogApp', 'responsiveslides', 'video'], function($, Backbone, catalogApp, responsiveSlides, videoJs) {
    var CinitializeMediaSlider, MAX_MEDIA_WIDTH, initializeMediaSlider, resizeVideoJS, videoControl;

    MAX_MEDIA_WIDTH = 0;
    'The `videoControl` function uses jQuery to match all elements with a class of `video-js` \nso that we can pause and resize all instances of videos on the screen at once when navigating \nwith the `ResponseSlives.js` plugin.';
    videoControl = function(callback) {
      return $('.video-js').each(function() {
        var id, video;

        id = $(this).attr('id');
        'The crazy `_V_` function comes from the Video.js library, and it requires an id attribute \non elements to match.';
        video = _V_(id);
        return callback(video);
      });
    };
    'And, this provides responsive support for resizing the videos or images when the browser window size changes.';
    resizeVideoJS = function() {
      var aspectRatio;

      aspectRatio = 504 / 640;
      return videoControl(function(video) {
        var width;

        width = document.getElementById(video.id).parentElement.offsetWidth;
        if (MAX_MEDIA_WIDTH > 0) {
          if (width > MAX_MEDIA_WIDTH) {
            width = MAX_MEDIA_WIDTH;
          }
        }
        return video.width(width).height(width * aspectRatio);
      });
    };
    window.onresize = resizeVideoJS;
    initializeMediaSlider = function(el) {
      var settings;

      settings = {
        auto: false,
        pager: true,
        speed: 500,
        before: function() {
          return videoControl(function(video) {
            return video.pause();
          });
        }
      };
      if (MAX_MEDIA_WIDTH > 0) {
        settings.maxwidth = MAX_MEDIA_WIDTH;
      }
      return el.find('.rslides').responsiveSlides(settings);
    };
    CinitializeMediaSlider = function() {
      return $('.carousel').bind('slide', function() {
        console.log('slide');
        return videoControl(function(video) {
          return video.pause();
        });
      });
    };
    catalogApp.MediaView = Backbone.View.extend({
      render: function() {
        var content, el;

        content = this.template(this.model);
        el = $(this.el);
        el.html(content);
        initializeMediaSlider(el);
        resizeVideoJS();
        return this;
      }
    });
    return catalogApp.MediaView;
  });

}).call(this);
